--[[--------------------

 * Author: 闪电黑客

 * 日期: 2021/12/20 18:45:09

 * 最后日期: 2021/12/20 18:45:09

 * 最后修改: 闪电黑客

 * 描述:  

    LuaMono对象池组装器
    新建C#的LuaMono对象池，给其组装Lua的函数事件

--]] --------------------
using "MonoObjectItem"

-- Mono对象池
-- ------------------
-- MonoStart
-- MonoOnDestroy
-- ------------------
-- MonoUpdate
-- MonoLateUpdate
-- MonoFixedUpdate
-- ------------------
-- MonoOnEnable
-- MonoOnDisable
-- ------------------
-- MonoOnCollisionEnter(collision)
-- MonoOnCollisionStay(collision)
-- MonoOnCollisionExit(collision)
-- MonoOnCollisionEnter2D(collision2D)
-- MonoOnCollisionStay2D(collision2D)
-- MonoOnCollisionExit2D(collision2D)
-- ------------------
-- MonoOnTriggerEnter(collider)
-- MonoOnTriggerStay(collider)
-- MonoOnTriggerExit(collider)
-- MonoOnTriggerEnter2D(collider2D)
-- MonoOnTriggerStay2D(collider2D)
-- MonoOnTriggerExit2D(collider2D)
-- ------------------
-- MonoOnApplicationQuit
-- MonoOnApplicationFocus(bit)
-- MonoOnApplicationPause(bit)
-- ------------------
MonoObjectPool = {}

-- 新建池
function MonoObjectPool.New(table)
    return MonoObjectPool.New(table, nil)
end

-- 新建池
function MonoObjectPool.New(table, prefab)
    local newPool = LuaMonoObjectPool(table, prefab)
    --组装对象池
    newPool.NewObject = MonoObjectPool.ObjectNew
    newPool.DestroyObject = MonoObjectPool.ObjectDestroy
    newPool.objectOnNew = MonoObjectPool.ObjectOnNew
    newPool.objectOnGet = MonoObjectPool.ObjectOnGet
    newPool.objectOnRecycle = MonoObjectPool.ObjectOnRecycle
    newPool.objectOnDestroy = MonoObjectPool.ObjectOnDestroy
    return newPool
end


-- 新建对象的方法
function MonoObjectPool.ObjectNew(pool)
    local gameObj = nil

    if pool.prefab == nil then
        gameObj = GameObject(pool.objName)
    else
        gameObj = Instantiate(pool.prefab)
        gameObj.name = pool.objName
    end

    local monoObj = gameObj:AddComponent(typeof(LuaMonoObject))

    monoObj.table = pool.table:New()
    monoObj.table.selfPool = pool
    monoObj.table.mono = monoObj
    --
    MonoObjectPool.MonoRegisterEvent(monoObj)

    return monoObj
end

function MonoObjectPool.MonoRegisterEvent(monoObj)
    monoObj.MonoStart = monoObj.table.MonoStart
    monoObj.MonoOnDestroy = monoObj.table.MonoOnDestroy

    monoObj.MonoUpdate = monoObj.table.MonoUpdate
    monoObj.MonoLateUpdate = monoObj.table.MonoLateUpdate
    monoObj.MonoFixedUpdate = monoObj.table.MonoFixedUpdate

    monoObj.MonoOnEnable = monoObj.table.MonoOnEnable
    monoObj.MonoOnDisable = monoObj.table.MonoOnDisable

    monoObj.MonoOnCollisionEnter = monoObj.table.MonoOnCollisionEnter
    monoObj.MonoOnCollisionStay = monoObj.table.MonoOnCollisionStay
    monoObj.MonoOnCollisionExit = monoObj.table.MonoOnCollisionExit
    monoObj.MonoOnCollisionEnter2D = monoObj.table.MonoOnCollisionEnter2D
    monoObj.MonoOnCollisionStay2D = monoObj.table.MonoOnCollisionStay2D
    monoObj.MonoOnCollisionExit2D = monoObj.table.MonoOnCollisionExit2D

    monoObj.MonoOnTriggerEnter = monoObj.table.MonoOnTriggerEnter
    monoObj.MonoOnTriggerStay = monoObj.table.MonoOnTriggerStay
    monoObj.MonoOnTriggerExit = monoObj.table.MonoOnTriggerExit
    monoObj.MonoOnTriggerEnter2D = monoObj.table.MonoOnTriggerEnter2D
    monoObj.MonoOnTriggerStay2D = monoObj.table.MonoOnTriggerStay2D
    monoObj.MonoOnTriggerExit2D = monoObj.table.MonoOnTriggerExit2D

    monoObj.MonoOnApplicationQuit = monoObj.table.MonoOnApplicationQuit
    monoObj.MonoOnApplicationFocus = monoObj.table.MonoOnApplicationFocus
    monoObj.MonoOnApplicationPause = monoObj.table.MonoOnApplicationPause
end


function MonoObjectPool.ObjectDestroy(obj)
    obj.table = nil
    GameObject.Destroy(obj.gameObject)
end


function MonoObjectPool.ObjectOnNew(obj)
    obj.transform:SetParent(obj.table.selfPool.poolTransform)
    obj.table:ObjectOnNew()
end


function MonoObjectPool.ObjectOnGet(obj)
    obj.gameObject:SetActive(true)
    obj.table:ObjectOnGet()
end


function MonoObjectPool.ObjectOnRecycle(obj)
    obj.gameObject:SetActive(false)
    obj.transform:SetParent(obj.table.selfPool.poolTransform)
    obj.table:ObjectOnRecycle()
end


function MonoObjectPool.ObjectOnDestroy(obj)
    obj.table:ObjectOnDestroy()
end


