--[[--------------------

 * Author: 闪电黑客

 * 日期: 2021/12/18 18:41:03

 * 最后日期: 2021/12/18 23:12:43

 * 最后修改: 闪电黑客

 * 描述:  

--]] --------------------
using 'ObjectPool'
using "MonoObjectPool"

-- 测试Mono类：继承Lua对象接口
TestMonoClass = MonoObjectItem:Extend({
    TableName = "TestMonoClass"
})

-- 新建LuaMono对象池(表，预制体)
TestMonoClass.pool = MonoObjectPool.New(TestMonoClass,
    GlobalAsset:Get("pfb_ui", "WindowMain", typeof(GameObject):ToString()))

-- 设置对象池
TestMonoClass.pool.objectDestoryClock = 10
TestMonoClass.pool.objectLimit = 50

function TestMonoClass.Get(parent)
    return TestMonoClass.pool:Get(parent).table
end


-- 对象的静态获取方法
function TestMonoClass.Get()
    return TestMonoClass.pool:GetObject().table
end


function TestMonoClass:ObjectOnNew()
    print("Lua新建")
end


function TestMonoClass:ObjectOnGet()
    print("Lua获取")
end


function TestMonoClass:ObjectOnRecycle()
    print("Lua回收")
end


function TestMonoClass:ObjectOnDestroy()
    print("Lua销毁")
end


function TestMonoClass:MonoStart()
    print("MonoStart")
end


function TestMonoClass:MonoOnEnable()
    print("MonoOnEnable")
end


function TestMonoClass:MonoOnDisable()
    print("MonoOnDisable")
end


function TestMonoClass:MonoUpdate()
    -- print("Lua对象Update")
end


function TestMonoClass:MonoLateUpdate()
    -- print("Lua对象LateUpdate")
end


function TestMonoClass:MonoFixedUpdate()
    -- print("Lua对象FixedUpdate")
end


-- ?测试

obj = TestMonoClass.Get()

-- obj:ObjectRecycle()

-- coroutine.wrap(function()
--     print("!!!!")
--     AsyncDelay(3000)
--     print("!!!!?????")

-- end
-- )()

TastTable001 = CS.TastTable001()

t1 = NewCS1(TastTable001)

-- print(t1.str)
-- t1.pr1(t1.CSBase, 120, 321)

t1:pr1(1242)